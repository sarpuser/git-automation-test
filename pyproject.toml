[project]
name = "pkg"
version = "0.0.0"
description = "A lightweight service monitoring tool that generates static status pages"
readme = "README.md"
authors = [
    {name = "Sarp User", email = "sarpuser@gmail.com"}
]
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License"
]
requires-python = ">=3.11"

[project.urls]
"Homepage" = "https://github.com/sarpuser/watchkeeper"
"Bug Tracker" = "https://github.com/sarpuser/watchkeeper/issues"

# [project.scripts]
# watchkeeper = "watchkeeper.cli.parser:main"

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "--cov=src --cov-report=xml --cov-report=term-missing --cov-fail-under=90"

[tool.ruff]
# Target version
target-version = "py311"

# Exclude a variety of commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Line length
line-length = 88

[tool.ruff.lint]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Enable required linting rules
select = [
    "E",   # pycodestyle errors
    "F",   # Pyflakes
    "I",   # isort
    "C90", # McCabe complexity
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ANN", # flake8-annotations (type annotations)
    "RUF", # Ruff-specific rules
    "PYI", # stub files
    "PGH", # pygrep-hooks including type annotation issues
]

# Explicitly exclude naming rules
ignore = ["N"]

# Mccabe complexity settings
[tool.ruff.lint.mccabe]
max-complexity = 10

# Google docstring convention
[tool.ruff.lint.pydocstyle]
convention = "google"

# Import sorting settings
[tool.ruff.lint.isort]
known-first-party = ["pkg"]
combine-as-imports = true

# Enforce type annotations
[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

# Format settings - use tabs and double quotes
[tool.ruff.format]
quote-style = "double"
indent-style = "tab"
line-ending = "auto"
# Don't reformat docstrings
docstring-code-format = false

# mypy configuration for strong typing
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true
exclude = ["tests/"]

[tool.bumpversion]
current_version = "0.2.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""